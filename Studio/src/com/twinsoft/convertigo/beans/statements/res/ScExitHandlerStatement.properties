display_name=Screen class exit handler
short_description=Defines a screen class exit handler. | A <i>Handler</i> is similar to a <span class="computer">Function</span> except that it is automatically executed when the associated event occurs. The <i>Screen class exit handler</i> is a handler associated with the exit from a screen class event. It is executed when Convertigo detects the screen class corresponding to this <i>Screen class exit handler</i>, after having executed the extraction rules associated with this screen class.<br/>\
In other words, a <i>Screen class exit handler</i> is executed when leaving the screen class associated with this handler.<br/>\
<span class="orangetwinsoft">Notes:</span> \
<br/><br/>\
 \u2022 A <i>Screen class exit handler</i> contains other statements that define the actions to be performed on this screen class. It can return a result value (<span class="computer">accumulate</span> by default as it is an exit handler).<br/>\
 \u2022 <i>Screen class exit handlers</i> can only be added to a transaction, one <i>Screen class exit handler</i> for each screen class per transaction.<br/>
property.handlerResult.display_name=Result
property.handlerResult.short_description=Defines the handler's default resulting value. | Depending on the handler type, this property can be chosen among several available values.<br/>\
For a <i>Screen class exit handler</i>, this property can take the following values:\
<br/><br/>\
 \u2022 <span class="computer"><empty></span> or <span class="computer">""</span>: stops the process and ends the transaction, <br/>\
 \u2022 <span class="computer">continue</span>: similar to <span class="computer"><empty></span> value, <br/>\
 \u2022 <span class="computer">accumulate</span>: accumulates extracted data (data is extracted from last detected screen class then added to any other extracted data) and redetects a new screen class.<br/>\
<br/>\
<span class="orangetwinsoft">Note:</span> The <i>Handler</i>'s default return value defined thanks to this property can be overridden by a child <i>Return</i> statement.
