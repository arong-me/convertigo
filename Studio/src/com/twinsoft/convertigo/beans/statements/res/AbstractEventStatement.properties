display_name=Event
short_description=Defines an event.
property.trigger.display_name=Synchronization
property.trigger.short_description=Defines how to synchronize the statement. | A synchronizer states how and when accessed pages are considered fully loaded. Only then are data extracted and new pages re-detected.<br/>\
There are several types of synchronizers, that are described hereafter:\
<ul><li><span class="computer">Document completed</span>: The synchronizer waits for a number of documents to be completed. Specify here how many "document completed" events Convertigo has to wait for before assuming that the page is complete. \
In many cases, when the target application uses HTTP META redirects or JavaScript redirects, the document is loaded several times. You can monitor <br/>\
<span class="computer">==== start parse ======</span><br/>\
and<br/>\
<span class="computer">==== Parse end ==(XXXms )====================</span><br/>\
traces in the Engine console (debug mode) to count the number of "document completed" events needed for the synchronizer. \
The <span class="computer">Document completed</span> synchronizer can be configured to also stop on alert messages that could pop up. Alert messages do not trigger a "document completed" event and are not detected by this synchronizer. To activate this option, check the <b>Stop on alert</b> checkbox. </li>\
<li><span class="computer">XPath</span>: The synchronizer waits until a specified XPath is found. Convertigo tries to evaluate the specified XPath while receiving a web page or executing JavaScript in it. Once the XPath matches at least one node of the page, the synchronizer returns. </li>\
<li><span class="computer">Wait time</span>: The synchronizer waits until a specified time is reached (in ms, set via the <b>Timeout</b> property). </li>\
<li><span class="computer">Screen Class</span>: The synchronizer waits for one of the selected screen classes to be detected. Several screen classes can be selected to be waited for. The synchronizer returns when one of them is reached. </li>\
<li><span class="computer">Download started</span>: The synchronizer waits for a download request. This is the perfect synchronizer to use before a <b>Get attachment</b> statement. </li>\
<li><span class="computer">No wait</span>: The synchronizer doesn't wait and execution proceeds directly. </li></ul><br/>\
For all synchronizer types, the maximum waiting time is set using the <b>Timeout</b> property.
