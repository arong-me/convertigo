property.accessibility.display_name=Accessibility
property.accessibility.short_description=Defines the transaction/sequence accessibility. | This property can take the following values: \
***{{Computer}}Public{{-Computer}}: The transaction/sequence is runnable from everyone and everywhere, visible in the Test Platform and is also exposed in the SOAP WSDL as a web service method. \
***{{Computer}}Hidden{{-Computer}}: The transaction/sequence is runnable but only from people who know the execution URL, not visible in the Test Platform nor exposed in the SOAP WSDL. \
***{{Computer}}Private{{-Computer}}: The transaction/sequence is only runnable from within the Convertigo engine ({{Reference}}Call Transaction{{-Reference}}/({{Reference}}Call Sequence{{-Reference}} steps), is not visible in the Test Platform and cannot be requested as SOAP web service method. This value is used for tests, unfinished transactions/sequences or functionalities not to be exposed. Private transactions/sequences remain runnable in the Studio, for the developer to be able to test its developments.\n\
{{Orange Twinsoft}}Note:{{-Orange Twinsoft}} In the Test Platform: \
***The administrator user (authenticated in Administration Console or Test Platform) can see and run all transactions / sequences, no matter what their {{Produit/Fonction}}accessibility{{-Produit/Fonction}} is. \
***The test user (authenticated in the Test Platform or in case of anonymous access) can see and run public transactions/sequences and run hidden ones if he knows their execution URL. 
property.encodingCharSet.display_name=Character set
property.encodingCharSet.short_description=Defines the character set used for operations on the generated XML document (default: {{Computer}}UTF-8{{-Computer}}).
property.responseExpiryDate.display_name=Response cache
property.responseExpiryDate.short_description=Defines the response cache parameters, implying the cache activation for the transaction/sequence. | The {{Produit/Fonction}}Response cache{{-Produit/Fonction}} property allows to define the cache settings for the transaction/sequence's response. The cache settings to configure are the followings: \
***{{Produit/Fonction}}Response lifetime{{-Produit/Fonction}}: defines the time-to-live (in seconds) of the response in cache, i.e. the time during which the cached response remains valid or time interval for its renewal. This setting enables the cache when filled, disables the cache when left empty. \
***{{Produit/Fonction}}Authenticated user{{-Produit/Fonction}}: when the cache is enabled ({{Produit/Fonction}}Response lifetime{{-Produit/Fonction}} setting filled with a time-to-live), the {{Produit/Fonction}}Authenticated user{{-Produit/Fonction}} setting allows to specify to use the authenticated user ID from context/session as an additional key to the cache. It would have as effect that two different identified users can not retrieve the cached response of the other for the same request. Default value is that the authenticated user is not used as cache key. \n\
The {{Produit/Fonction}}Response lifetime{{-Produit/Fonction}} setting can be set to the following values: \
***{{Computer}}<empty>{{-Computer}}: Disables the cache for the transaction/sequence. The response will not be cached and each request will execute the complete transaction. It is the default value. \
***{{Computer}}absolute,<time in secs>{{-Computer}}: Enables the cache for the transaction/sequence. The response will be cached for the time specified in seconds. If an other request with the same parameters occurs within this time, the response will be returned from the cache. \
***{{Computer}}daily,hh:mm:ss{{-Computer}}: Enables the cache for the transaction/sequence. The response will be cached until {{Computer}}hh:mm:ss{{-Computer}} of the current day is reached. If an other request with the same parameters occurs before this time, the response will be returned from the cache. {{Produit/Fonction}}A new day starts at 00:00:00.{{-Produit/Fonction}} \
***{{Computer}}weekly,hh:mm:ss,w{{-Computer}}: Enables the cache for the transaction/sequence. The response will be cached until {{Computer}}hh:mm:ss{{-Computer}} of the {{Computer}}wth{{-Computer}} day of week is reached. For Sunday w = 1, for Monday w = 2 ... and for Saturday w = 7. If an other request with the same parameters occurs before this time, the response will be returned from the cache. {{Produit/Fonction}}A new day starts at 00:00:00.{{-Produit/Fonction}} \
***{{Computer}}monthly,hh:mm:ss,d{{-Computer}}: Enables the cache for the transaction/sequence. The response will be cached until {{Computer}}hh:mm:ss{{-Computer}} of the {{Computer}}dth{{-Computer}} day of month is reached. If an other request with the same parameters occurs before this time, the response will be returned from the cache. {{Produit/Fonction}}A new day starts at 00:00:00.{{-Produit/Fonction}} \n\
{{Orange Twinsoft}}Notes:{{-Orange Twinsoft}} \
***The {{Produit/Fonction}}Response cache{{-Produit/Fonction}} property editor popup window proposes a {{Reference}}Generator tool{{-Reference}} that can help you configure the {{Produit/Fonction}}Response lifetime{{-Produit/Fonction}} setting. \
***The {{Reference}}Variable{{-Reference}} objects contain the {{Produit/Fonction}}Cache key{{-Produit/Fonction}} property that allows to specify to use this variable as a key to the cache or not. See {{Reference}}Variable{{-Reference}} objects documentation. 
property.authenticatedUserAsCacheKey.display_name=Authenticated user as cache key
property.authenticatedUserAsCacheKey.short_description=Use the authenticated user like cache key
property.responseTimeout.display_name=Response timeout
property.responseTimeout.short_description=Defines the response maximum waiting time (in seconds). | Maximum time (in seconds) for a transaction/sequence to run. When specified time is reached, the transaction/sequence ends and returns a timeout error. If requested through the SOAP interface, the error is returned as a SOAP exception.
property.sheetLocation.display_name=Style sheet
property.sheetLocation.short_description=Defines how the XML returned by the transaction has to be processed by XSLT. | This property can take the following values:\
***{{Computer}}None{{-Computer}}: Do not process with XSLT. Usual setting for web services (SOAP or REST) where plain XML data is to be returned.\
***{{Computer}}From transaction{{-Computer}}: Use the XSL style sheet attached to the transaction. When used, make sure a style sheet object is added to the transaction.\
***{{Computer}}From last detected screen class{{-Computer}}: Use XSL style sheet attached to the last detected screen class (in case of a transaction with screen classes). \n\
Transactions using sheets from last detected screen class are mainly used in Web Clipping or Legacy Publishing projects.
property.billable.display_name=Call the biller
property.billable.short_description=Defines whether the billing management module should be called for each generated XML document. | If this property is set to {{Computer}}true{{-Computer}}, the applicable billing management module, defined thanks to the connector's billing class name property, is invoqued. {{Produit/Fonction}}This parameter should never be changed{{-Produit/Fonction}} (Convertigo private use only).
property.clientCachable.display_name=Response client cache
property.clientCachable.short_description=Defines whether the transaction/sequence response should be cached by the client. |  If set to {{Computer}}false{{-Computer}}, the response XML is sent to the client along with HTTP headers forcing the client browser not to store it in its local cache. This is the default value, since dynamic responses are usually preferred. If set to {{Computer}}true{{-Computer}}, the XML response is sent normally.
property.secureConnectionRequired.display_name=Secure connection required
property.secureConnectionRequired.short_description=Defines whether the transaction/sequence should be called through a secured connection (e.g. HTTPS). | Depending on the requester, if this property is set to {{Computer}}true{{-Computer}}, the transaction/sequence must be accessed through a secure connection (e.g. HTTPS in case of HTTP access). Default value is {{Computer}}false{{-Computer}} for a standard access to transactions/sequences.
property.addStatistics.display_name=Add statistics to response
property.addStatistics.short_description=Defines whether some statistics of execution of the transaction/sequence should be added as data in the transaction/sequence's response. | If this property is set to {{Computer}}true{{-Computer}}, the transaction/sequence response will be enhanced with the statistics data of its execution (total time for the request, time spent waiting for the mainframe, etc.). \n\
{{Orange Twinsoft}}Note:{{-Orange Twinsoft}} This property has nothing to do with the general property of the Convertigo engine {{Produit/Fonction}}Insert statistics in the generated document{{-Produit/Fonction}} that can be edited in the {{Reference}}Configuration{{-Reference}} page of the {{Reference}}Administration Console{{-Reference}}.
property.authenticatedContextRequired.display_name=Authenticated context required
property.authenticatedContextRequired.short_description=Defines whether an authenticated context is required to execute the transaction/sequence. | If this property is set to {{Computer}}true{{-Computer}}, the context of execution of the transaction/sequence must have been authenticated. Otherwise, the transaction/sequence is not executed. Default value is {{Computer}}false{{-Computer}} for a standard access to transactions/sequences. \n\
{{Orange Twinsoft}}Notes:{{-Orange Twinsoft}} \
***When a context is authenticated, all the contexts in the same HTTP session are also authenticated. For more information about context and HTTP session, see {{Reference}}Context general presentation{{-Reference}} paragraph in {{Reference}}JavaScript Objects APIs{{-Reference}} chapter. \
***When executing a transaction/sequence from stub ({{Computer}}__stub{{-Computer}} variable passed to {{Computer}}true{{-Computer}} in entry), this property is ignored. Indeed, executing from stub is for testing purposes and should not require any authentication: the context would never be authenticated as the transaction/sequence setting the context as authenticated could also be executed from stub.
