display_name=SQL connector
short_description=Establishes connections with an SQL database. | The {{Reference}}SQL connector{{-Reference}} enables Convertigo to connect to any database and execute requests. \n\
The access to the target database is configured using the {{Produit/Fonction}}Driver{{-Produit/Fonction}} property and the {{Produit/Fonction}}Database URL{{-Produit/Fonction}} property. Credentials may be defined in the {{Produit/Fonction}}User name{{-Produit/Fonction}} and the {{Produit/Fonction}}User password{{-Produit/Fonction}} properties, if required. \n\
The {{Reference}}SQL connector{{-Reference}} includes a connection pooling process that allows opening a certain number of connections, defined by the {{Produit/Fonction}}Max. connections{{-Produit/Fonction}} property, that are always ready to execute the requests. \n\
The pooled connections are by default kept opened after the transaction execution. This behavior can be inverted using the {{Produit/Fonction}}Keep connection alive{{-Produit/Fonction}} property.\n\
The pooled connections can also be automatically tested before execution using the {{Produit/Fonction}}Test connection{{-Produit/Fonction}} property. \n\
Idle connections can be detected and automatically reset using the {{Produit/Fonction}}Idle connection search delay{{-Produit/Fonction}} property. \n\
The connection pool can be disabled using the {{Produit/Fonction}}Enable connection pool{{-Produit/Fonction}} property. 
property.jdbcDriverClassName.display_name=Driver
property.jdbcDriverClassName.short_description=Defines the {{Computer}}JDBC{{-Computer}} driver class to use. | The following drivers can be selected:\
***{{Computer}}sun.jdbc.odbc.JdbcOdbcDriver{{-Computer}}: JDBC-ODBC bridge for accessing ODBC databases, for example Microsoft Access. \
***{{Computer}}com.ibm.as400.access.AS400JDBCDriver{{-Computer}}: IBM AS400 database. \
***{{Computer}}com.mysql.jdbc.Driver{{-Computer}}: MySQL database. \
***{{Computer}}net.sourceforge.jtds.jdbc.Driver{{-Computer}}: Microsoft SQL Server database. \
***{{Computer}}org.hsqldb.jdbcDriver{{-Computer}}: HSQLDB database (one is included in the Studio for demos and samples). \
***{{Computer}}com.ibm.db2.jcc.DB2Driver{{-Computer}}: IBM DB2 Server database. \
***{{Computer}}oracle.jdbc.driver.OracleDriver{{-Computer}}: ORACLE database. \
***{{Computer}}org.mariadb.jdbc.Driver{{-Computer}}: MariaDB database, community-developed fork of MySQL. \
***{{Computer}}JNDI{{-Computer}}: JNDI mode, not using any JDBC driver nor the connection pooling process. When using JNDI mode, the connection to the database can be configured using the "context.xml" file. This file is located in the "<workspace_folder>/studio" folder in Studio, has to be created in the "<convertigo_webapp>/META-INF/" folder in Server.
property.jdbcURL.display_name=Database URL
property.jdbcURL.short_description=Defines the database URL. | This property defines the URL needed to connect to the database using the driver class. The database URL syntax depends on the driver class selected in {{Produit/Fonction}}Driver{{-Produit/Fonction}} property: \
***{{Computer}}sun.jdbc.odbc.JdbcOdbcDriver{{-Computer}} needs a URL of the form: {{Computer}}jdbc:odbc:[DSN (datasource name)]{{-Computer}}. \
***{{Computer}}com.ibm.as400.access.AS400JDBCDriver{{-Computer}} needs a URL of the form: {{Computer}}jdbc:as400:[//server-name/default-schema;properties]{{-Computer}}. \
***{{Computer}}com.mysql.jdbc.Driver{{-Computer}} needs a URL of the form: {{Computer}}jdbc:mysql:[//server-name/database-name]{{-Computer}}. \
***{{Computer}}net.sourceforge.jtds.jdbc.Driver{{-Computer}} needs a URL of the form: {{Computer}}jdbc:jtds:sqlserver:[//server-name:port/database-name]{{-Computer}}. \
***{{Computer}}org.hsqldb.jdbcDriver{{-Computer}} needs a URL of the form: {{Computer}}jdbc:hsqldb:file:[/tmp/database]{{-Computer}}. \
***{{Computer}}com.ibm.db2.jcc.DB2Driver{{-Computer}} needs a URL of the form: {{Computer}}jdbc:db2:[//server-name:port/database-name]{{-Computer}}. \
***{{Computer}}oracle.jdbc.driver.OracleDriver{{-Computer}} needs a URL of the form: {{Computer}}jdbc:oracle:[thin:@//[HOST][:PORT]/SERVICE]{{-Computer}}. \
***{{Computer}}org.mariadb.jdbc.Driver{{-Computer}} needs a URL of the form: {{Computer}}jdbc:mysql:[//server-name/database-name]{{-Computer}}. \
***{{Computer}}JNDI{{-Computer}} needs a JNDI resource name: {{Computer}}[resource-ref-name]{{-Computer}}.
property.jdbcUserName.display_name=User name
property.jdbcUserName.short_description=Defines the user name needed for connecting to the database. | This user must exist in the target database and have sufficient authorizations to performs requests executed by transactions.
property.jdbcUserPassword.display_name=User password
property.jdbcUserPassword.short_description=Defines the user password needed for connecting to the database. | This password must correspond to user name defined in the {{Produit/Fonction}}User name{{-Produit/Fonction}} property.
property.jdbcMaxConnection.display_name=Max. connections
property.jdbcMaxConnection.short_description=Defines the maximum number of connections allowed in the connection pool to access the target database. | The {{Reference}}SQL connector{{-Reference}} connection pool opens in parallel all connections to the target database. This property defines the maximum number of co-existing connections allowed for this connector to connect to the target database. \n\
For example, HSQLDB database included in Studio only allows one connection.
property.systemTablesQuery.display_name=Connection testing query
property.systemTablesQuery.short_description=Defines the SQL query to execute to test the connection to the database (optional). | The {{Reference}}SQL connector{{-Reference}} connection pool needs to check the validity of opened connections. This optional property defines the SQL query to execute on a new opened connection to check the connection's validity. \n\
If this property is left blank, Convertigo uses a default SQL query to retrieve the list of the database system tables, depending on the chosen {{Produit/Fonction}}Driver{{-Produit/Fonction}}:\
***{{Computer}}sun.jdbc.odbc.JdbcOdbcDriver{{-Computer}}: {{Computer}}SELECT 1 AS dbcp_connection_test{{-Computer}}. \
***{{Computer}}com.ibm.as400.access.AS400JDBCDriver{{-Computer}}: {{Computer}}SELECT * FROM SYSIBM.SQLSCHEMAS FETCH FIRST 1 ROWS ONLY{{-Computer}}. \
***{{Computer}}com.mysql.jdbc.Driver{{-Computer}}: {{Computer}}SELECT * FROM INFORMATION_SCHEMA.TABLES LIMIT 1{{-Computer}}. \
***{{Computer}}net.sourceforge.jtds.jdbc.Driver{{-Computer}}: {{Computer}}SELECT TOP 1 * FROM INFORMATION_SCHEMA.TABLES{{-Computer}}. \
***{{Computer}}org.hsqldb.jdbcDriver{{-Computer}}: {{Computer}}SELECT TOP 1 * FROM INFORMATION_SCHEMA.SYSTEM_TABLES{{-Computer}}. \
***{{Computer}}com.ibm.db2.jcc.DB2Driver{{-Computer}}: {{Computer}}SELECT * FROM SYSCAT.TABLES FETCH FIRST 1 ROWS{{-Computer}}. \
***{{Computer}}oracle.jdbc.driver.OracleDriver{{-Computer}}: {{Computer}}SELECT * FROM ALL_TABLES WHERE ROWNUM <= 1{{-Computer}}. \
***{{Computer}}org.mariadb.jdbc.Driver{{-Computer}} needs a URL of the form: {{Computer}}SELECT * FROM INFORMATION_SCHEMA.TABLES LIMIT 1{{-Computer}}. \
***{{Computer}}JNDI{{-Computer}}: {{Computer}}SELECT 1 AS dbcp_connection_test{{-Computer}}.
property.keepConnectionAliveAfterTransaction.display_name=Keep connection alive
property.keepConnectionAliveAfterTransaction.short_description=Defines whether the connection to the database should be maintained after a transaction execution. | Due to the use of connection pool, the {{Reference}}SQL connector{{-Reference}} prevents database connections from being closed after each transaction execution or context end. This property set to {{Computer}}false{{-Computer}} will force the closure of a connection after a transaction execution or a context end.
property.idleConnectionTestTime.display_name=Idle connection search delay
property.idleConnectionTestTime.short_description=Defines the number of seconds to wait between searches for idle connections in the connection pool (in seconds). | The {{Reference}}SQL connector{{-Reference}} connection pool can automatically search for idle connections and remove them from the pool so they are re-started. This property allows the programmer to set a time delay between two searches. \n\
Default value is {{Computer}}60{{-Computer}} seconds. To disable the idle connection search, set this value to {{Computer}}0{{-Computer}}.
property.connectionPool.display_name=Enable connection pool
property.connectionPool.short_description=Defines whether the connection pool is used or not to access target database. | The {{Reference}}SQL connector{{-Reference}} connection pool allows to automatically pre-connect a pool of connections to the target database. This property allows the programmer to enable or disable the connection pool. \n\
If set to {{Computer}}true{{-Computer}}, the connection pool is enabled and connections are retrieved from the pool. If set to {{Computer}}false{{-Computer}}, the connection pool is disabled and connections are created on-demand. Default value is {{Computer}}true{{-Computer}}.
property.testOnBorrow.display_name=Test connection
property.testOnBorrow.short_description=Defines whether the connection pool should test or not the connection before providing it. | The {{Reference}}SQL connector{{-Reference}} connection pool can test the connection before providing it to the requesting transaction for execution. This property allows the programmer to enable or disable this automatic check. \n\
Default value is {{Computer}}false{{-Computer}}, i.e. the automatic test of each connection is disabled.
