display_name=HTTP single-valued variable
short_description=Defines a single-valued variable for an HTTP-based transaction. | An <i>HTTP single-valued variable</i> declares a variable which accepts a unique value to an HTTP-based transaction. <br/>\
This variable is dedicated to HTTP-based transactions only: \
<ul><li><i>HTTP transaction</i>, </li>\
<li><i>XML HTTP transaction</i>, </li>\
<li><i>JSON HTTP transaction</i>, </li>\
<li><i>HTML transaction</i>. </li></ul><br/>\
This variable object allows defining HTTP request parameter through the <b>HTTP name</b> and <b>HTTP method</b> properties. <br/>\
It can define a default value, specified in the <b>Default value</b> property, that is used as HTTP parameter value if no value is found for this variable. <br/>\
At runtime, the HTTP parameter value is calculated by Convertigo through the following steps: \
<ul><li>the value is received in the request to the transaction, </li>\
<li>if no value is received for this variable, the JavaScript value of the variable is chosen, if a variable of the same name exists in the JavaScript scope of current context, </li>\
<li>if no JavaScript value is defined, the context value of the variable is chosen, if a variable of the same name is stored in current context, </li>\
<li>if none of the previous methods gives a value, the default value is used, </li>\
<li>if no default value is specified, the variable is not defined and an Exception can be thrown when trying to access its value in the core of the transaction. </li></ul><br/>\
<span class="orangetwinsoft">Notes:</span> \
<ul><li>In Convertigo Studio, when an <i>HTTP single-valued variable</i> is created in a transaction/sequence, it can be easily replaced by an <i>HTTP multi-valued variable</i>, using the right-click menu on the variable and choosing the option <b>Change to</b> > <b>MultiValued variable</b>. </li>\
<li><i>HTTP connector</i> supports OAuth authentication. To enable OAuth, you simply need to provide four variables to any kind of <i>HTTP transaction</i>: <span class="computer">__header_oAuthKey</span>, <span class="computer">__header_oAuthSecret</span>, <span class="computer">__header_oAuthToken</span> and <span class="computer">__header_oAuthTokenSecret</span>. For more information about OAuth in <i>HTTP connector</i>, refer to the following article in our Technical Blog: <i>http://www.convertigo.com/en/how-to/technical-blog/entry/using-oauth-with-convertigo-http-connector.html</i>  </li></ul>
property.httpMethod.display_name=HTTP method
property.httpMethod.short_description=Defines the HTTP method to use for this variable. | This property allows choosing which HTTP method has to be used to send the variable in the HTTP request. The following values are available: \
<ul><li><span class="computer">GET</span>: the transaction is executed as an HTTP GET request and the variable is added to the query string as follows: <span class="computer">?<initial_query_string>&<variable_name>=<variable_value></span>. </li>\
<li><span class="computer">POST</span>: the variable is added to the data sent in the HTTP request as a standard <span class="computer">POST FORM</span>. </li></ul><br/>\
<span class="computer">GET</span> and <span class="computer">POST</span> method variables can be mixed in a same transaction. If at least one <span class="computer">POST</span> variable is used, the transaction's HTTP verb is overridden to <span class="computer">POST</span> by Convertigo.
property.httpName.display_name=HTTP name
property.httpName.short_description=Defines the HTTP parameter name. | This property allows defining the name of the HTTP variable sent in the request by Convertigo executing the parent transaction. <br/>\
If the HTTP-based transaction emulates a form submission, this property can match the <span class="computer">name</span> attribute of an HTML input field. If the HTTP-based transaction emulates a resource access by URL, this property can match one of the variables names from the query string (between "<span class="computer">&</span>" and "<span class="computer">=</span>" characters).
