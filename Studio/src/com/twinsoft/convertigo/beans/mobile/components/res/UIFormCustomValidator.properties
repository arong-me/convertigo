display_name=CustomValidator
short_description=Defines a <i>CustomValidator</i> component. | The <i>CustomValidator</i> is a component which give you the ability to customize the validation for a given form input or for the whole form.\
<br/>Add a <i>CustomValidator</i> component under a <i>Form</i> or an input component such as <i>Text Input</i>.\
<br>Specify whether your validation function is asynchronous or not through the <i>Asynchronous</i> property of your <i>CustomValidator</i>.\
<br/>Double click on the validator to open the Typescript editor and write the required code for your validation function.\
<br>It has one parameter to allow you to access controls values:\
<br><li>when validator is under a form:</br><code>g:FormGroup</code> the form, use <code>g.get('&lt;control_name&gt;').value</code> to retrieve a control's value</li>\
<br><li>when validator is under a control:</br><code>c:FormControl</code> the control, use <code>c.value</code> to retrieve control's value</li>\
<br>Your validation function should return <code>null</code> when valid, otherwise it should return any <code>json</code> object filled with error informations.\
<br/>Also, you can add a <i>Submit Button</i> to your <i>Form</i> with its <code>Auto disable</code> property set to <code>true</code> to avoid form submission by disabling the button whenever form data are not valid.\
<br/>For more information: <a href='https://angular.io/guide/form-validation#reactive-form-validation' target='_blank'>Reactive form validation</a>.
property.validatorValue.display_name=Function content
property.validatorValue.short_description=Defines the content code of the validator function. |
