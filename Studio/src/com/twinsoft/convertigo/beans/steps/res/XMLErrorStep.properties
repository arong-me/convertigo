display_name=Error
short_description=Creates an XML structure describing an applicative error. | The {{Reference}}Error{{-Reference}} step generates an output XML structure corresponding to an applicative error. This structure is created on a standard basis (error code, message, details) that is automatically managed by client applications developed with Convertigo Mobilizer and/or using the Convertigo Templating Framework. \n\
The basic error structure elements are filled using the step's corresponding properties: {{Produit/Fonction}}Code{{-Produit/Fonction}}, {{Produit/Fonction}}Message{{-Produit/Fonction}} and {{Produit/Fonction}}Details{{-Produit/Fonction}}. The structure can be enhanced with user-defined elements. To do so, child steps have to be added under this step (the same way as for a {{Reference}}Complex{{-Reference}} step). \n\
This error structure contains a {{Computer}}type{{-Computer}} attribute, which value is automatically set to {{Computer}}project{{-Computer}}. It allows to differentiate a project/applicative error from an irrecoverable Server error ({{Computer}}type{{-Computer}} attribute value is then {{Computer}}c8o{{-Computer}}). \n\
The error structure can be output in the response XML of the sequence if the {{Produit/Fonction}}Output{{-Produit/Fonction}} property is set to {{Computer}}true{{-Computer}}, or used as a source by any other following step. \n\
An {{Reference}}Error{{-Reference}} step does not break the sequence execution flow (contrary to {{Reference}}jException{{-Reference}} step for example). Use the {{Reference}}Break{{-Reference}} or {{Reference}}Return{{-Reference}} steps when you need to stop the sequence execution flow after an {{Reference}}Error{{-Reference}} step.
property.message.display_name=Message
property.message.short_description=An optional text message to fill in error structure, explaining the error. | This property is a "smart type" property, that allows to specify the error message. \n\
A "smart type" property can be of one of the following types: \
***a {{Produit/Fonction}}text{{-Produit/Fonction}}: the value is therefore a default text value, \
***a {{Produit/Fonction}}JavaScript expression{{-Produit/Fonction}}: the value is therefore a JavaScript expression that is evaluated at sequence execution, \
***a {{Produit/Fonction}}source{{-Produit/Fonction}}: the value is a source and can be picked using the source picker. A {{Produit/Fonction}}source{{-Produit/Fonction}} is defined as a reference on a step previously existing in the parent sequence, associated with an XPath applied on the step's result DOM. At runtime, the XPath is applied on the step's current execution result XML and extracts a list of XML nodes resulting from this execution. \n\
{{Orange Twinsoft}}Notes:{{-Orange Twinsoft}} \
***If you use the {{Produit/Fonction}}source{{-Produit/Fonction}} type for this property, the XPath application on target XML should give a text result. Otherwise, the first node's text content is taken. \
***If not present, the project error dictionary is used in the user's locale (if using the Internationalization framework).
property.details.display_name=Details
property.details.short_description=Some technical information details about the error, to fill in error structure, mainly for debugging purposes. | This property is a "smart type" property, that allows to specify the error details. \n\
A "smart type" property can be of one of the following types: \
***a {{Produit/Fonction}}text{{-Produit/Fonction}}: the value is therefore a default text value, \
***a {{Produit/Fonction}}JavaScript expression{{-Produit/Fonction}}: the value is therefore a JavaScript expression that is evaluated at sequence execution, \
***a {{Produit/Fonction}}source{{-Produit/Fonction}}: the value is a source and can be picked using the source picker. A {{Produit/Fonction}}source{{-Produit/Fonction}} is defined as a reference on a step previously existing in the parent sequence, associated with an XPath applied on the step's result DOM. At runtime, the XPath is applied on the step's current execution result XML and extracts a list of XML nodes resulting from this execution. \n\
{{Orange Twinsoft}}Note:{{-Orange Twinsoft}} If you use the {{Produit/Fonction}}source{{-Produit/Fonction}} type for this property, the XPath application on target XML should give a text result. Otherwise, the first node's text content is taken.
property.code.display_name=Code
property.code.short_description=A numeric error code to fill in error structure, identifying the error. | This property is a "smart type" property, that allows to specify the error code. \n\
A "smart type" property can be of one of the following types: \
***a {{Produit/Fonction}}text{{-Produit/Fonction}}: the value is therefore a default text value, \
***a {{Produit/Fonction}}JavaScript expression{{-Produit/Fonction}}: the value is therefore a JavaScript expression that is evaluated at sequence execution, \
***a {{Produit/Fonction}}source{{-Produit/Fonction}}: the value is a source and can be picked using the source picker. A {{Produit/Fonction}}source{{-Produit/Fonction}} is defined as a reference on a step previously existing in the parent sequence, associated with an XPath applied on the step's result DOM. At runtime, the XPath is applied on the step's current execution result XML and extracts a list of XML nodes resulting from this execution. \n\
{{Orange Twinsoft}}Note:{{-Orange Twinsoft}} If you use the {{Produit/Fonction}}source{{-Produit/Fonction}} type for this property, the XPath application on target XML should give a text result. Otherwise, the first node's text content is taken.
