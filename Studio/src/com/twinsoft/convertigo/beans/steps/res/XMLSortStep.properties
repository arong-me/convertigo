display_name=Sort
short_description=Sorts XML nodes from a source using a sort key defined by an XPath. | The {{Reference}}Sort{{-Reference}} step: \
***defines a source as input list to work on, i.e. a list of nodes from a previous step, \
***applies an XPath on each item of the list to define a sort key for this node (the XPath is defined in the {{Produit/Fonction}}Sort XPath{{-Produit/Fonction}} property), \
***sorts the nodes from the list by their sort key, following options defined in other properties ({{Produit/Fonction}}Sort order{{-Produit/Fonction}}, {{Produit/Fonction}}Sort type{{-Produit/Fonction}} and {{Produit/Fonction}}Sort options{{-Produit/Fonction}}), \
***outputs the sorted nodes, so they can be used as source by a following step or output by the {{Reference}}Sequence{{-Reference}}.
property.sourceDefinition.display_name=Source
property.sourceDefinition.short_description=Defines the source list to sort. | This property allows defining a list of nodes from a previous step on which current step works. \n\
A {{Produit/Fonction}}source{{-Produit/Fonction}} is defined as a reference on a step previously existing in the parent sequence, associated with an XPath applied on the step's result DOM. At runtime, the XPath is applied on the step's current execution result XML and extracts a list of XML nodes resulting from this execution. \n\
If the XPath doesn't match or if the source is left blank, the step has no data to work on: the list is empty, nothing is sorted and the parent sequence execution continues.
property.sortXPATHDefinition.display_name=Sort XPath
property.sortXPATHDefinition.short_description=The XPath that is applied on each node of the list to define the sort key. | This property allows to define an XPath which, applied on each node of the source list, gives the sort key of the node. The sort key of each node of the list is then used for sorting the list: each node is represented by its sort key during the sort algorithm.  
property.orderSort.display_name=Sort order
property.orderSort.short_description=Defines the sorting order. | This property allows to define the sorting order. It can take the following values: \
***{{Computer}}ascending{{-Computer}}: the sort is performed by ascending order, \
***{{Computer}}descending{{-Computer}}: the sort is performed by descending order.  
property.typeSort.display_name=Sort type
property.typeSort.short_description=Defines on which data type the sort is performed. | This property allows to define on which data type the sort is performed. It can take the following values: \
***{{Computer}}String{{-Computer}}: the sort keys are of string type, the sort is performed by alphabetical order, \
***{{Computer}}Number{{-Computer}}: the sort keys are of number type, the sort is performed by numerical order, \
***{{Computer}}Date{{-Computer}}: the sort keys are of date type, the sort is performed chronologically, using the {{Produit/Fonction}}Sort option{{-Produit/Fonction}} property to define the date format.  
property.optionSort.display_name=Sort option
property.optionSort.short_description=Defines some options to sort the sort key, depending on their type. | Depending on the {{Produit/Fonction}}Sort type{{-Produit/Fonction}} property value, this property contains options that are needed to make the comparison. \
For {{Computer}}Date{{-Computer}} sort type (sort keys of date type), this property must contain the sort keys date format. For more information on usable symbols, see Appendix "{{Reference}}Date format - Usable symbols{{-Reference}}".
