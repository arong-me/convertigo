display_name=Push Notifications
short_description=Defines a step able to send notifications to mobile devices. | The {{Reference}}Push Notifications{{-Reference}} step is used to make the sequence send a notification to mobile devices using one of the standard {{Computer}}APNS{{-Computer}} (Apple), or {{Computer}}GCMS{{-Computer}} (Android) channels. \n\
The list of devices to which send the notification is configured using the {{Produit/Fonction}}Device tokens{{-Produit/Fonction}} property. The data to be sent in the notification is configured using the {{Produit/Fonction}}Notification data{{-Produit/Fonction}} property. \n\
Other properties (which names start by APNS or Google) are those to use in order to configure the technical parameters of the push system.
property.token.display_name=Device tokens
property.token.short_description=Defines the list of tokens identifying the mobile devices to notify. | The {{Produit/Fonction}}Device tokens{{-Produit/Fonction}} property is of source type, defining a list of nodes from a previous step for current step to work on. \n\
A {{Produit/Fonction}}source{{-Produit/Fonction}} is defined as a reference on a step previously existing in the parent sequence, associated with an XPath applied on the step's result DOM. At runtime, the XPath is applied on the step's current execution result XML and extracts a list of XML nodes resulting from this execution. \n\
If the XPath doesn't match or if the source is left blank, the step has no data to work on: no device is selected, no notification is sent, and the parent sequence execution continues. \n\
{{Orange Twinsoft}}Notes:{{-Orange Twinsoft}} \
***The mobile device tokens must be known from the Convertigo Server so a list of tokens can be used in this property. Generally, the tokens are generated by the mobile device itself and are sent to Convertigo Server by executing a "storing" sequence. The "storing" sequence should store the tokens in a database (or else), so that they can be retrieved and used in this property. \
***The mobile device tokens are destination aware: an Android Google Cloud Messaging token will start by {{Computer}}gcm:{{-Computer}} and Apple's APNS tokens will start by {{Computer}}apns:{{-Computer}}. The tokens stored server-side already contain this piece of information. 
property.clientcertificate.display_name=APNS client certificate
property.clientcertificate.short_description=Defines an Apple .p12 certificate file to use for push on iOS devices. | This property is a JavaScript expression that is evaluated during the sequence execution and gives the path of a {{Computer}}.p12{{-Computer}} certificate file. The {{Computer}}.p12{{-Computer}} file must be generated by Apple's Certificate portal (https://developer.apple.com/account/overview.action). \
The path is either absolute or relative to the project's directory. Paths starting with:\
***{{Computer}}./{{-Computer}} are relative to Convertigo home,\
***{{Computer}}.//{{-Computer}} are relative to the project folder.
property.certificatepassword.display_name=APNS certificate password
property.certificatepassword.short_description=Defines the password of the Apple .p12 certificate file. | This property is a JavaScript expression that is evaluated during the sequence execution and gives the valid password for the {{Computer}}.p12{{-Computer}} certificate file.
property.gcmapikey.display_name=Google API key
property.gcmapikey.short_description=Defines the Google Cloud messaging API key to use for push on Android devices. |  This property is a JavaScript expression that is evaluated during the sequence execution and gives the Google Cloud messaging API key. This key can be obtained by following the Google Cloud Messaging documentation (http://developer.android.com/google/gcm/gs.html). 
property.apnsnotificationtype.display_name=APNS notification type
property.apnsnotificationtype.short_description=Defines the type of push notification for Apple's APNS. | This property allows to define which Apple's APNS push type is to be used. It can take one of the following values: \
***{{Computer}}Message{{-Computer}}: sends messages, \
***{{Computer}}Badge{{-Computer}}: notifies application's badge, \
***{{Computer}}Sound{{-Computer}}: plays a sound. \n\
Default value is {{Computer}}Message{{-Computer}}.
property.sourceDefinition.display_name=Notification data
property.sourceDefinition.short_description=Data to be sent in the notification. |  The {{Produit/Fonction}}Notification data{{-Produit/Fonction}} property is of source type, defining a list of nodes from a previous step for current step to work on. \n\
A {{Produit/Fonction}}source{{-Produit/Fonction}} is defined as a reference on a step previously existing in the parent sequence, associated with an XPath applied on the step's result DOM. At runtime, the XPath is applied on the step's current execution result XML and extracts a list of XML nodes resulting from this execution. \n\
If the XPath doesn't match or if the source is left blank, the step has no data to work on: notification is sent with no data. \n\
This content can be a text message, a number to be displayed on a badge, or the name of a sound to play, depending on the {{Produit/Fonction}}APNS notification type{{-Produit/Fonction}} property value (only for iOS devices).
property.androidTimeToLive.display_name=Android Time to Live
property.androidTimeToLive.short_description=Time to Live (in seconds) of the message sent for Android GCM. If the message is not delivered within this time, it will be discarded. 
